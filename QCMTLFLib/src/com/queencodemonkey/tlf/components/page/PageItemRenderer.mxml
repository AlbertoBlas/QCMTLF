<?xml version="1.0" encoding="utf-8"?>
<!--============================================================================

    Copyright Â© 2011, Huyen Tue Dao
    All rights reserved.

    Redistribution and use in source and binary forms, with or without
    modification, are permitted provided that the following conditions are
    met:
    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the
      documentation and/or other materials provided with the distribution.
    * Neither the name of the <organization> nor the
      names of its contributors may be used to endorse or promote products
      derived from this software without specific prior written
      permission.

    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
    IS"AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
    THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR
    ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
    DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
    SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
    CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
    LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
    OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
    SUCH DAMAGE.

=============================================================================-->
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009"
                xmlns:s="library://ns.adobe.com/flex/spark"
                xmlns:mx="library://ns.adobe.com/flex/mx"
                autoDrawBackground="true">

    <fx:Script>
        <![CDATA[
			import flashx.textLayout.container.ContainerController;
			
			import mx.core.IVisualElement;

            //------------------------------------------------------------------
            //
            //  G E T T E R S / S E T T E R S 
            //
            //------------------------------------------------------------------

            /**
             * @inheritDoc
             */
            override public function set data(value:Object):void
            {
                var newContainerController:ContainerController = value is ContainerController ? value as ContainerController : null;

                if (newContainerController != data)
                {
                    super.data = newContainerController;
                    dataDirty = true;
                    invalidateProperties();
                }

            }

            //------------------------------------------------------------------
            //  G E T T E R / S E T T E R    P R O P E R T I E S 
            //------------------------------------------------------------------

            private var _data:Object = null;

            //------------------------------------------------------------------
            //  D I R T Y    F L A G S 
            //------------------------------------------------------------------

            private var dataDirty:Boolean = false;
			
			/**
			 * @inheritDoc
			 */
			override protected function commitProperties():void
			{
				super.commitProperties();
				
				if ( dataDirty )
				{
					var controller:ContainerController = data as ContainerController;
					var container:IVisualElement = controller.container as IVisualElement;
					if ( container )
					{
						addElement( container );
					}
					dataDirty = false;
				}
			}
        ]]>
    </fx:Script>

</s:ItemRenderer>
